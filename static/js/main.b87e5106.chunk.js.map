{"version":3,"sources":["components/Title.jsx","components/Display.jsx","components/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["Title","props","className","React","Component","Display","id","this","timeTitle","time","timerInterval","String","prototype","toHHMMSS","sec_num","parseInt","minutes","Math","floor","seconds","Clock","state","timerLabel","timeDisplay","breakLength","sessionLength","timerStart","bind","handlePlayAndPause","handleReset","handleBreakIncrement","handleBreakDecrement","handleSessionIncrement","handleSessionDecrement","setState","newTimeSession","newSession","toString","clearInterval","setInterval","alarm","document","getElementById","pause","currentTime","console","log","classList","add","breakNumber","newTimeDisplay","play","sessionNumber","onClick","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b87e5106.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h1 className='title col-12'>Timer Machine</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nclass Display extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='display-container col-12'>\r\n        <h1 id=\"timer-label\">{this.props.timeTitle}</h1>\r\n        <h1 id=\"time-left\">{this.props.time}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React from 'react';\r\nimport Title from './Title.jsx';\r\nimport Display from './Display.jsx';\r\n\r\nlet timerInterval = '';\r\n\r\nString.prototype.toHHMMSS = function () {\r\n    var sec_num = parseInt(this, 10); // don't forget the second param\r\n    var minutes = Math.floor((sec_num) / 60);\r\n    var seconds = sec_num - (minutes * 60);\r\n\r\n    if (minutes < 10) {minutes = \"0\"+minutes;}\r\n    if (seconds < 10) {seconds = \"0\"+seconds;}\r\n    return minutes+':'+seconds;\r\n}\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      timerLabel: 'session',\r\n      timeDisplay: '25:00',\r\n      seconds: 1500,\r\n      breakLength: 5,\r\n      sessionLength: 25\r\n    }\r\n    this.timerStart = this.timerStart.bind(this);\r\n    this.handlePlayAndPause = this.handlePlayAndPause.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.handleBreakIncrement = this.handleBreakIncrement.bind(this);\r\n    this.handleBreakDecrement = this.handleBreakDecrement.bind(this);\r\n    this.handleSessionIncrement = this.handleSessionIncrement.bind(this);\r\n    this.handleSessionDecrement = this.handleSessionDecrement.bind(this);\r\n  }\r\n\r\n  handleSessionDecrement(){\r\n    let sessionLength = this.state.sessionLength;\r\n    if(sessionLength > 1){\r\n      sessionLength-= 1;\r\n    }\r\n    this.setState({\r\n      sessionLength\r\n    });\r\n\r\n    if (!timerInterval){\r\n      let newTimeSession = sessionLength * 60;\r\n      let newTimeSessionStr = newTimeSession.toString();\r\n      let newSession = newTimeSessionStr.toHHMMSS();\r\n\r\n      this.setState({\r\n        seconds: newTimeSession,\r\n        timeDisplay: newSession,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSessionIncrement(){\r\n    let sessionLength = this.state.sessionLength;\r\n    if(sessionLength < 60){\r\n      sessionLength+= 1;\r\n    }\r\n\r\n    this.setState({\r\n      sessionLength\r\n    });\r\n\r\n    if (!timerInterval){\r\n      let newTimeSession = sessionLength * 60;\r\n      let newTimeSessionStr = newTimeSession.toString();\r\n      let newSession = newTimeSessionStr.toHHMMSS();\r\n\r\n      this.setState({\r\n        seconds: newTimeSession,\r\n        timeDisplay: newSession,\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleBreakDecrement(){\r\n    let breakLength = this.state.breakLength;\r\n    if (breakLength > 1){\r\n        breakLength-= 1;\r\n    }\r\n\r\n    this.setState({\r\n      breakLength\r\n    })\r\n  }\r\n\r\n  handleBreakIncrement(){\r\n    let breakLength = this.state.breakLength;\r\n\r\n    if (breakLength < 60){\r\n          breakLength+= 1;\r\n    }\r\n\r\n    this.setState({\r\n      breakLength\r\n    })\r\n  }\r\n\r\n  handlePlayAndPause(){\r\n    if(!timerInterval){\r\n      timerInterval = setInterval(this.timerStart, 1000);\r\n    }\r\n    else{\r\n      clearInterval(timerInterval);\r\n        timerInterval = ''\r\n    }\r\n  }\r\n\r\n  handleReset(){\r\n    this.setState({\r\n      timerLabel: 'session',\r\n      timeDisplay: '25:00',\r\n      seconds: 1500,\r\n      breakLength: 5,\r\n      sessionLength: 25\r\n    })\r\n\r\n    if (timerInterval){\r\n      clearInterval(timerInterval);\r\n        timerInterval = ''\r\n    }\r\n    let alarm = document.getElementById('beep');\r\n    alarm.pause();\r\n    alarm.currentTime = 0;\r\n  }\r\n\r\n  timerStart(){\r\n    let timeDisplay = this.state.timeDisplay;\r\n    let change = false;\r\n\r\n    if(timerInterval){\r\n      let seconds = this.state.seconds;\r\n      seconds-= 1;\r\n      let numberStr = seconds.toString();\r\n      let timeDisplay = numberStr.toHHMMSS();\r\n      console.log(seconds)\r\n      this.setState({\r\n        seconds,\r\n        timeDisplay: timeDisplay\r\n      });\r\n\r\n      if(this.state.timeDisplay === '00:59'){\r\n        let oneMinLeft = document.getElementById('time-left');\r\n        oneMinLeft.classList.add('one-left');\r\n      }\r\n\r\n      if(this.state.timeDisplay === '0-1:59' && this.state.timerLabel === 'session'){\r\n          let breakNumber = (this.state.breakLength * 60) ;\r\n          let breakStr = breakNumber.toString();\r\n          let newTimeDisplay = breakStr.toHHMMSS();\r\n\r\n          this.setState({\r\n            timerLabel: 'break',\r\n            timeDisplay: newTimeDisplay,\r\n            seconds: breakNumber,\r\n          });\r\n          let alarm = document.getElementById('beep');\r\n          alarm.play();\r\n      }\r\n\r\n      if(this.state.timeDisplay === '0-1:59' && this.state.timerLabel === 'break'){\r\n          let sessionNumber = (this.state.sessionLength * 60) ;\r\n          let sessionStr = sessionNumber.toString();\r\n          let newTimeDisplay = sessionStr.toHHMMSS();\r\n\r\n          this.setState({\r\n            timerLabel: 'session',\r\n            timeDisplay: newTimeDisplay,\r\n            seconds: sessionNumber,\r\n          });\r\n          let alarm = document.getElementById('beep');\r\n          alarm.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className='clock-container container w-auto'>\r\n        <Title />\r\n        <div className='row'>\r\n              <div id='break-container' className='col-6'>\r\n                <div className='row'>\r\n                  <h2 id=\"break-label\" className='col-12'>Break Length</h2>\r\n                </div>\r\n                <div className='row'>\r\n                  <div id=\"break-decrement\" className='col-4 button' onClick={this.handleBreakDecrement}><h1>-</h1></div>\r\n                  <h1 id='break-length' className='col-4'><h1>{this.state.breakLength}</h1></h1>\r\n                  <div id=\"break-increment\" className='col-4 button' onClick={this.handleBreakIncrement}><h1>+</h1></div>\r\n                </div>\r\n              </div>\r\n              <div id='session-container' className='col-6'>\r\n                <div className='row'>\r\n                  <h2 id=\"session-label\" className='col-12'>Session Length</h2>\r\n                </div>\r\n                <div className='row'>\r\n                  <div id=\"session-decrement\" className='col-4 button' onClick={this.handleSessionDecrement}><h1>-</h1></div>\r\n                  <h1 id='session-length' className='col-4'><h1>{this.state.sessionLength}</h1></h1>\r\n                  <div id=\"session-increment\" className='col-4 button' onClick={this.handleSessionIncrement}><h1>+</h1></div>\r\n                </div>\r\n              </div>\r\n        </div>\r\n        <div className='row'>\r\n          <Display timeTitle={this.state.timerLabel} time={ this.state.timeDisplay}/>\r\n        </div>\r\n        <div className='controls'>\r\n          <button id=\"start_stop\" className='btn btn-outline-danger' onClick={this.handlePlayAndPause}>play/pause</button>\r\n          <button id=\"reset\" className='btn btn-outline-success' onClick={this.handleReset}>reset</button>\r\n        </div>\r\n        <audio id=\"beep\" src='sounds/alarm.mp3'></audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import Clock from './components/Clock.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n    <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport './styles/styles.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n<React.StrictMode>\r\n  <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}